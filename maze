using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;

namespace ConsoleApplication13
{
    class Program
    {
        public class Maze
        {
            //Declare maze and size
            private static int _size = 5;
            public static int Size
            {
                get { return _size; }
                set { _size = value; }
            }
            //We declare a maze as a map with passages and mountains
            public int[,] maze = new int[Size, Size];

            //We create a class that will count how many times the hero has stepped 
            //into every cell
            public int[,] Count = new int[Size, Size];

            //We create a random number to create Mountains
            Random r = new Random();

            //We check which will be our next step after checking. 
            //A counting integer will determine if we go up down left or right.
            public int NextStep = 0;

            //We fill the map with 1 as cells you can walk through
            public Maze()
            {
                for (int i = 0; i < Size; i++)
                {
                    for (int j = 0; j < Size; j++)
                    {
                        maze[i, j] = 1;
                        Count[i, j] = 0;
                    }
                }
            }

            //Forward is checking which direction has been met the least times
            //and sets a value to NextMove so that our hero moves accordingly.
            public void Forward(int x, int y)
            {     
                List<int> Steps = new List<int>();
                {
                    Steps.Clear();
                    if (x < Size)
                    Steps.Add(Count[x + 1, y]);
                    if (x > 0)
                    Steps.Add(Count[x - 1, y]);
                    if (y < Size)
                    Steps.Add(Count[x, y + 1]);
                    if (y > 0)
                    Steps.Add(Count[x, y - 1]);
                }
                Steps.Sort();
                if (Steps[0] == Count[x + 1, y])
                    NextStep = 1;
                else if (Steps[0] == Count[x - 1, y])
                    NextStep = 2;
                else if (Steps[0] == Count[x, y + 1])
                    NextStep = 3;
                else
                    NextStep = 4;
            }

            public void Movement(int x, int y)
            {
                int a = x;
                int b = y;
                switch (NextStep)
                {
                   //Move Right
                   case 1:
                       a++;
                       Count[a, b]++;
                   break;

                    //Move left
                    case 2:              
                       a--;
                       Count[a, b]++;
                    break;
                        
                    //Move down
                    case 3:                   
                        b++;
                        Count[a,b]++;
                    break;

                    //Move up
                    case 4:             
                        b--;
                        Count[a, b]++;
                    break;
                }
            }
        }



        static void Main(string[] args)
        {
            Maze player = new Maze();

            //We manually put Hero's starting point
            int x_hero = 0;
            int y_hero = 0;

            //We manually put Labyrinth's Exit Point
            int x_exit = 4;
            int y_exit = 4;

            //Make the trip from hero's starting point to the exit
            for (int i = 0; i < 10; i++) {
                player.Forward(x_hero, y_hero);
                player.Movement(x_hero, y_hero);
                Console.WriteLine(x_hero + " " + y_hero);
                Console.WriteLine(player.NextStep);
            }

  
             
             //while (x_hero != x_exit && y_hero != y_exit);

        }
    }
}
